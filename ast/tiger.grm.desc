
state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	program	goto 136
	exp	goto 2
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 1)
	exp : lvalue . ASSIGN exp 

	ASSIGN	shift 14


	.	reduce by rule 1


state 2:

	program : exp .  (reduce by rule 0)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 2)



	.	reduce by rule 2


state 4:

	exp : BREAK .  (reduce by rule 30)



	.	reduce by rule 30


state 5:

	exp : LET . decs IN optseq END 


	decs	goto 27

	.	reduce by rule 47


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 28


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 29
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 30
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 31
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . optseq RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 34
	lvalue	goto 1
	optseq	goto 33
	expseq	goto 32

	.	reduce by rule 38


state 11:

	exp : STRING .  (reduce by rule 5)



	.	reduce by rule 5


state 12:

	exp : INT .  (reduce by rule 4)



	.	reduce by rule 4


state 13:

	exp : ID . LPAREN RPAREN 
	exp : ID . LPAREN explist RPAREN 
	exp : ID . LBRACE RBRACE 
	exp : ID . LBRACE fieldlist RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 31)
	lvalue : ID . accseq 

	LPAREN	shift 40
	LBRACK	shift 39
	LBRACE	shift 38
	DOT	shift 37

	accseq	goto 36
	access	goto 35

	.	reduce by rule 31


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 41
	lvalue	goto 1

	.	error


state 15:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1

	.	error


state 16:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	lvalue	goto 1

	.	error


state 17:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 44
	lvalue	goto 1

	.	error


state 18:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 45
	lvalue	goto 1

	.	error


state 19:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 46
	lvalue	goto 1

	.	error


state 20:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 47
	lvalue	goto 1

	.	error


state 21:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 48
	lvalue	goto 1

	.	error


state 22:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 23:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 24:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 25:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 26:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 27:

	exp : LET decs . IN optseq END 
	decs : decs . dec 

	IN	shift 61
	FUNCTION	shift 60
	VAR	shift 59
	TYPE	shift 58

	dec	goto 57
	tydec	goto 56
	vardec	goto 55
	fundec	goto 54

	.	error


state 28:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 62


	.	error


state 29:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 63


	.	error


state 30:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	THEN	shift 64


	.	error


state 31:

	exp : MINUS exp .  (reduce by rule 6)
	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 6


state 32:

	optseq : expseq .  (reduce by rule 37)
	expseq : expseq . SEMICOLON exp 

	SEMICOLON	shift 65


	.	reduce by rule 37


state 33:

	exp : LPAREN optseq . RPAREN 

	RPAREN	shift 66


	.	error


state 34:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	expseq : exp .  (reduce by rule 40)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 40


state 35:

	accseq : access .  (reduce by rule 34)



	.	reduce by rule 34


state 36:

	lvalue : ID accseq .  (reduce by rule 32)
	accseq : accseq . access 

	LBRACK	shift 68
	DOT	shift 37

	access	goto 67

	.	reduce by rule 32


state 37:

	access : DOT . ID 

	ID	shift 69


	.	error


state 38:

	exp : ID LBRACE . RBRACE 
	exp : ID LBRACE . fieldlist RBRACE 

	ID	shift 73
	RBRACE	shift 72

	fieldlist	goto 71
	field	goto 70

	.	error


state 39:

	exp : ID LBRACK . exp RBRACK OF exp 
	access : LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 74
	lvalue	goto 1

	.	error


state 40:

	exp : ID LPAREN . RPAREN 
	exp : ID LPAREN . explist RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	RPAREN	shift 77
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 76
	lvalue	goto 1
	explist	goto 75

	.	error


state 41:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 24)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 24


state 42:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 20)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16


	.	reduce by rule 20


state 43:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 19)
	exp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17


	.	reduce by rule 19


state 44:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 18)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 18
	COMMA	reduce by rule 18
	SEMICOLON	reduce by rule 18
	RPAREN	reduce by rule 18
	RBRACK	reduce by rule 18
	RBRACE	reduce by rule 18
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 18
	OR	reduce by rule 18
	THEN	reduce by rule 18
	ELSE	reduce by rule 18
	TO	reduce by rule 18
	DO	reduce by rule 18
	IN	reduce by rule 18
	END	reduce by rule 18
	FUNCTION	reduce by rule 18
	VAR	reduce by rule 18
	TYPE	reduce by rule 18


	.	error


state 45:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 17)
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 17
	COMMA	reduce by rule 17
	SEMICOLON	reduce by rule 17
	RPAREN	reduce by rule 17
	RBRACK	reduce by rule 17
	RBRACE	reduce by rule 17
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 17
	OR	reduce by rule 17
	THEN	reduce by rule 17
	ELSE	reduce by rule 17
	TO	reduce by rule 17
	DO	reduce by rule 17
	IN	reduce by rule 17
	END	reduce by rule 17
	FUNCTION	reduce by rule 17
	VAR	reduce by rule 17
	TYPE	reduce by rule 17


	.	error


state 46:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 16)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 16
	COMMA	reduce by rule 16
	SEMICOLON	reduce by rule 16
	RPAREN	reduce by rule 16
	RBRACK	reduce by rule 16
	RBRACE	reduce by rule 16
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 16
	OR	reduce by rule 16
	THEN	reduce by rule 16
	ELSE	reduce by rule 16
	TO	reduce by rule 16
	DO	reduce by rule 16
	IN	reduce by rule 16
	END	reduce by rule 16
	FUNCTION	reduce by rule 16
	VAR	reduce by rule 16
	TYPE	reduce by rule 16


	.	error


state 47:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 15)
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 15
	COMMA	reduce by rule 15
	SEMICOLON	reduce by rule 15
	RPAREN	reduce by rule 15
	RBRACK	reduce by rule 15
	RBRACE	reduce by rule 15
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 15
	OR	reduce by rule 15
	THEN	reduce by rule 15
	ELSE	reduce by rule 15
	TO	reduce by rule 15
	DO	reduce by rule 15
	IN	reduce by rule 15
	END	reduce by rule 15
	FUNCTION	reduce by rule 15
	VAR	reduce by rule 15
	TYPE	reduce by rule 15


	.	error


state 48:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 14)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 14
	OR	reduce by rule 14
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 13)
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 13
	COMMA	reduce by rule 13
	SEMICOLON	reduce by rule 13
	RPAREN	reduce by rule 13
	RBRACK	reduce by rule 13
	RBRACE	reduce by rule 13
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 13
	OR	reduce by rule 13
	THEN	reduce by rule 13
	ELSE	reduce by rule 13
	TO	reduce by rule 13
	DO	reduce by rule 13
	IN	reduce by rule 13
	END	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 50:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 12)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 12


state 51:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 11)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 11


state 52:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 10)
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 10


state 53:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 9)
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 9


state 54:

	dec : fundec .  (reduce by rule 50)



	.	reduce by rule 50


state 55:

	dec : vardec .  (reduce by rule 49)



	.	reduce by rule 49


state 56:

	dec : tydec .  (reduce by rule 48)



	.	reduce by rule 48


state 57:

	decs : decs dec .  (reduce by rule 46)



	.	reduce by rule 46


state 58:

	tydec : TYPE . ID EQ ty 

	ID	shift 78


	.	error


state 59:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 79


	.	error


state 60:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 80


	.	error


state 61:

	exp : LET decs IN . optseq END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 34
	lvalue	goto 1
	optseq	goto 81
	expseq	goto 32

	.	reduce by rule 38


state 62:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 82
	lvalue	goto 1

	.	error


state 63:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 83
	lvalue	goto 1

	.	error


state 64:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 84
	lvalue	goto 1

	.	error


state 65:

	expseq : expseq SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 85
	lvalue	goto 1

	.	error


state 66:

	exp : LPAREN optseq RPAREN .  (reduce by rule 3)



	.	reduce by rule 3


state 67:

	accseq : accseq access .  (reduce by rule 33)



	.	reduce by rule 33


state 68:

	access : LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 86
	lvalue	goto 1

	.	error


state 69:

	access : DOT ID .  (reduce by rule 35)



	.	reduce by rule 35


state 70:

	fieldlist : field .  (reduce by rule 44)



	.	reduce by rule 44


state 71:

	exp : ID LBRACE fieldlist . RBRACE 
	fieldlist : fieldlist . COMMA field 

	COMMA	shift 88
	RBRACE	shift 87


	.	error


state 72:

	exp : ID LBRACE RBRACE .  (reduce by rule 21)



	.	reduce by rule 21


state 73:

	field : ID . EQ exp 

	EQ	shift 89


	.	error


state 74:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	access : LBRACK exp . RBRACK 

	RBRACK	shift 90
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 75:

	exp : ID LPAREN explist . RPAREN 
	explist : explist . COMMA exp 

	COMMA	shift 92
	RPAREN	shift 91


	.	error


state 76:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	explist : exp .  (reduce by rule 42)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 42


state 77:

	exp : ID LPAREN RPAREN .  (reduce by rule 7)



	.	reduce by rule 7


state 78:

	tydec : TYPE ID . EQ ty 

	EQ	shift 93


	.	error


state 79:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 95
	ASSIGN	shift 94


	.	error


state 80:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 96


	.	error


state 81:

	exp : LET decs IN optseq . END 

	END	shift 97


	.	error


state 82:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	TO	shift 98


	.	error


state 83:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 27)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 27


state 84:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 26)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	ELSE	shift 99


	.	reduce by rule 26


state 85:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	expseq : expseq SEMICOLON exp .  (reduce by rule 39)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 39


state 86:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	access : LBRACK exp . RBRACK 

	RBRACK	shift 100
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 87:

	exp : ID LBRACE fieldlist RBRACE .  (reduce by rule 22)



	.	reduce by rule 22


state 88:

	fieldlist : fieldlist COMMA . field 

	ID	shift 73

	field	goto 101

	.	error


state 89:

	field : ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 102
	lvalue	goto 1

	.	error


state 90:

	exp : ID LBRACK exp RBRACK . OF exp 
	access : LBRACK exp RBRACK .  (reduce by rule 36)

	OF	shift 103


	.	reduce by rule 36


state 91:

	exp : ID LPAREN explist RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 92:

	explist : explist COMMA . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 104
	lvalue	goto 1

	.	error


state 93:

	tydec : TYPE ID EQ . ty 

	ID	shift 108
	LBRACE	shift 107
	ARRAY	shift 106

	ty	goto 105

	.	error


state 94:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 109
	lvalue	goto 1

	.	error


state 95:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 110


	.	error


state 96:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 113

	tyfields	goto 112
	tyfield	goto 111

	.	reduce by rule 57


state 97:

	exp : LET decs IN optseq END .  (reduce by rule 29)



	.	reduce by rule 29


state 98:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 114
	lvalue	goto 1

	.	error


state 99:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 115
	lvalue	goto 1

	.	error


state 100:

	access : LBRACK exp RBRACK .  (reduce by rule 36)



	.	reduce by rule 36


state 101:

	fieldlist : fieldlist COMMA field .  (reduce by rule 43)



	.	reduce by rule 43


state 102:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	field : ID EQ exp .  (reduce by rule 45)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 45


state 103:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 116
	lvalue	goto 1

	.	error


state 104:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	explist : explist COMMA exp .  (reduce by rule 41)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 41


state 105:

	tydec : TYPE ID EQ ty .  (reduce by rule 51)



	.	reduce by rule 51


state 106:

	ty : ARRAY . OF ID 

	OF	shift 117


	.	error


state 107:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 113

	tyfields	goto 118
	tyfield	goto 111

	.	reduce by rule 57


state 108:

	ty : ID .  (reduce by rule 52)



	.	reduce by rule 52


state 109:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 59)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 59


state 110:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 119


	.	error


state 111:

	tyfields : tyfield .  (reduce by rule 56)



	.	reduce by rule 56


state 112:

	tyfields : tyfields . COMMA tyfield 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	COMMA	shift 121
	RPAREN	shift 120


	.	error


state 113:

	tyfield : ID . COLON ID 

	COLON	shift 122


	.	error


state 114:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 123


	.	error


state 115:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 25)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 25


state 116:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 23)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 23


state 117:

	ty : ARRAY OF . ID 

	ID	shift 124


	.	error


state 118:

	ty : LBRACE tyfields . RBRACE 
	tyfields : tyfields . COMMA tyfield 

	COMMA	shift 121
	RBRACE	shift 125


	.	error


state 119:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 126
	lvalue	goto 1

	.	error


state 120:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 128
	EQ	shift 127


	.	error


state 121:

	tyfields : tyfields COMMA . tyfield 

	ID	shift 113

	tyfield	goto 129

	.	error


state 122:

	tyfield : ID COLON . ID 

	ID	shift 130


	.	error


state 123:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 131
	lvalue	goto 1

	.	error


state 124:

	ty : ARRAY OF ID .  (reduce by rule 54)



	.	reduce by rule 54


state 125:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 53)



	.	reduce by rule 53


state 126:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 60)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 60


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 132
	lvalue	goto 1

	.	error


state 128:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 133


	.	error


state 129:

	tyfields : tyfields COMMA tyfield .  (reduce by rule 55)



	.	reduce by rule 55


state 130:

	tyfield : ID COLON ID .  (reduce by rule 58)



	.	reduce by rule 58


state 131:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 28)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 28


state 132:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 61)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 61


state 133:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 134


	.	error


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 135
	lvalue	goto 1

	.	error


state 135:

	exp : exp . PLUS exp 
	exp : exp . MINUS exp 
	exp : exp . TIMES exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 62)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 62


state 136:


	EOF	accept


	.	error

509 of 1010 action table entries left after compaction
95 goto table entries
